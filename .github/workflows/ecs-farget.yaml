name: Deploy Latest Docker Image to ECS

on:
  push:
    branches:
      - main  # Trigger the workflow on pushes to the main branch
  workflow_dispatch:  # Allow manual triggering of the workflow

jobs:
  deploy:
    runs-on: ubuntu-latest  # Use a GitHub-hosted runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # Check out the code from the GitHub repo

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}  # AWS Access Key from GitHub secrets
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  # AWS Secret Key from GitHub secrets
          aws-region: us-east-1  # Your AWS region

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1  # Log in to ECR
        
      - name: List Task Definitions
        run: |
          aws ecs list-task-definitions --max-results 10

      - name: Get Latest Image Digest
        id: get_image_digest
        run: |
          echo "Checking for task definition: persistentpoc-task"
          IMAGE_DIGEST=$(aws ecr describe-images --repository-name demo-app-ecr-repo --query 'sort_by(imageDetails[*], &imagePushedAt)[-1].imageDigest' --output text)
          if [ -z "$IMAGE_DIGEST" ]; then
            echo "Error: Unable to fetch image digest."
            exit 1
          fi
          echo "Latest Image Digest: $IMAGE_DIGEST"
          echo "image_digest=$IMAGE_DIGEST" >> $GITHUB_ENV  # Set the image digest as an environment variable

      - name: Register New Task Definition
        id: register_task_def
        run: |
          CURRENT_TASK_DEF=$(aws ecs describe-task-definition --task-definition persistentpoc-task)
          if [ $? -ne 0 ]; then
            echo "Error: Unable to fetch the current task definition."
            exit 1
          fi
          # Modify the image in the task definition
          NEW_TASK_DEF=$(echo $CURRENT_TASK_DEF | jq --arg IMAGE "${{ steps.login-ecr.outputs.registry }}/demo-app-ecr-repo:${{ env.image_digest }}" '...')
          # Register the new task definition
          NEW_TASK_DEF_ARN=$(aws ecs register-task-definition --cli-input-json "$NEW_TASK_DEF" --query 'taskDefinition.taskDefinitionArn' --output text)
          echo "New Task Definition ARN: $NEW_TASK_DEF_ARN"
          echo "task_definition_arn=$NEW_TASK_DEF_ARN" >> $GITHUB_ENV  # Set the task definition ARN as an environment variable

      - name: Update ECS Service
        run: |
          aws ecs update-service --cluster persistentpoc-cluster --service persistentpoc-svc --force-new-deployment --task-definition ${{ env.task_definition_arn }}
